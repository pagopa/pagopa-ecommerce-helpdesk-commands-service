openapi: 3.0.0
info:
  version: 1.0.0
  title: Pagopa helpdeskCommands services for assistance api
  description: This microservice that expose helpdeskCommands services for assistance api.
servers:
  - url: https://${host}
tags:
  - name: helpdeskCommands
    description: Api's for performing money refund operations over failed transactions # this will be evolving over time
    externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/I/pages/492339720/pagoPA+eCommerce+Design+Review #TODO this needs to be updated
      description: Technical specifications

paths:
  /commands/refund:
    post:
      tags:
        - ecommerce
      operationId: refundOperation
      summary: Api's for performing money refunds operations over failed transactions
      description: 'POST with body payload - no resources created'
      parameters:
        - in: header
          name: X-User-Id
          required: true
          description: User ID (populated by APIM policy)
          schema:
            type: string
        - in: header
          name: X-Forwarded-For
          required: true
          description: Client Source IP Address
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RefundTransactionRequest'
      responses:
        '200':
          description: Transactions refunded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundTransactionResponse'
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /commands/refund/redirect:
    post:
      tags:
        - ecommerce
      summary: Api's for refund redirect
      description: 'POST refund redirect'
      requestBody:
        $ref: '#/components/requestBodies/RefundRedirectRequest'
      responses:
        '200':
          description: Refund redirect completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundRedirectResponse'
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '502':
          description: Bad gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  schemas:
    AmountEuroCents:
      description: Amount for payments, in euro cents
      type: integer
      minimum: 0
      maximum: 99999999
    RefundTransactionResponse:
      type: object
      properties:
        refundOperationId:
          type: string
          description: The id of the refunded operation, if any
          default: 0
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
    RefundTransactionRequest:
      type: object
      properties:
        transactionId:
          type: string
          description: The id of the transaction
          minLength: 32
          maxLength: 32
        paymentMethodName:
          type: string
          description: The name of the payment method
        pspId:
          type: string
          description: The id of the psp
        operationId:
          type: string
          description: The id of the operation
        correlationId:
          type: string
          description: correlation id for a transaction executed with NPG
        amount:
          $ref: '#/components/schemas/AmountEuroCents'
      required:
        - transactionId
        - paymentMethodName
        - pspId
        - operationId
        - correlationId
        - amount
    RefundRedirectRequest:
      type: object
      properties:
        idTransaction:
          $ref: '#/components/schemas/PagopaIdTransaction'
        idPSPTransaction:
          description: PSP transaction id
          type: string
        action:
          description: Requested action (i.e. refund)
          type: string
        touchpoint:
          type: string
          description: Name of touchpoint
        paymentTypeCode:
          type: string
          description: The code of the payment method
        pspId:
          type: string
          description: The id of the psp
      required:
        - idTransaction
        - idPSPTransaction
        - action
        - touchpoint
        - pspId
        - paymentTypeCode
    RefundRedirectResponse:
      type: object
      description: Refund response body
      properties:
        idTransaction:
          $ref: '#/components/schemas/PagopaIdTransaction'
        outcome:
            $ref: '#/components/schemas/RefundOutcome'
      required:
        - idTransaction
        - outcome
    PagopaIdTransaction:
      description: Uniquely identify a transaction
      type: string
      minLength: 32
      maxLength: 32
      example: 3fa85f6457174562b3fc2c963f66afa6
    RefundOutcome:
      description: |
        Refund operation outcome:
        it can be one of the following values:
        * OK - `Refund operation processed successfully`
        * KO - `There was an error performing refund`
        * CANCELED - `The transaction was already refunded`
      type: string
      enum:
        - OK
        - KO
        - CANCELED
  requestBodies:
    RefundTransactionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundTransactionRequest'
    RefundRedirectRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundRedirectRequest'
